---
- name: Include a playbook from a collection
  ansible.builtin.import_playbook: podman.yaml

- name: Reset Demo
  hosts: localhost
  gather_facts: false
  tasks:

    - name: Clone GIT Repository
      ansible.builtin.command: "git -c http.sslVerify=false clone https://{{ lookup('ansible.builtin.env', 'GITLAB_USERNAME') }}:{{ lookup('ansible.builtin.env', 'GITLAB_PASSWORD') }}@{{ lookup('ansible.builtin.env', 'GITLAB_HOST') }}/root/sc24_casc.git /tmp/sc24_casc"

    - name: Copy Original file
      copy:
        dest: "/tmp/sc24_casc/sc24_casc.yml"
        src: "sc24_casc.yml"

    - name: "Add output directory to git"
      ansible.builtin.shell:
        chdir: /tmp/sc24_casc
        cmd: |
          git config --global user.name "Ansible"
          git config --global user.email "ansible@sc24.com"
          git add .
          git commit -m "Restored sc24_casc Original file. Automated Commit by Ansible" 
          git -c http.sslVerify=false push --repo="https://{{ lookup('ansible.builtin.env', 'GITLAB_USERNAME') }}:{{ lookup('ansible.builtin.env', 'GITLAB_PASSWORD') }}@{{ lookup('ansible.builtin.env', 'GITLAB_HOST') }}/root/sc24_casc.git"

    - name: Reset OPS Execution Environment
      ansible.controller.job_template:
        name: "[OPS] AÃ±adir usuario a operaciones"
        execution_environment: "Minimal execution environment"

    - name: Retrieve current users
      ansible.builtin.uri:
        url: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}/api/v2/users/"
        user: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
        password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
        method: GET
        validate_certs: false
        force_basic_auth: true
        status_code:
          - 200
      register: users

    - name: Delete non-wanted users
      ansible.controller.user: 
        username: "{{ item.username }}"
        state: absent
      loop: "{{ users.json.results }}"
      when: 
        - item.username != "admin"
        - item.username != "user1"
        - item.username != "user2"
        - item.username != "user3"

    - name: Delete Rulebook Activation
      ansible.eda.rulebook_activation:
        controller_host: "{{ lookup('ansible.builtin.env', 'EDA_HOST') }}"
        controller_username: "{{ lookup('ansible.builtin.env', 'EDA_USERNAME') }}"
        controller_password: "{{ lookup('ansible.builtin.env', 'EDA_PASSWORD') }}"
        validate_certs: false
        name: "Kafka Rulebook Activation"
        state: absent

    - name: Wait for rulebook activation to be deleted
      ansible.eda.rulebook_activation_info:
        controller_host: "{{ lookup('ansible.builtin.env', 'EDA_HOST') }}"
        controller_username: "{{ lookup('ansible.builtin.env', 'EDA_USERNAME') }}"
        controller_password: "{{ lookup('ansible.builtin.env', 'EDA_PASSWORD') }}"
        name: "Kafka Rulebook Activation"
        validate_certs: false
      register: activation_status
      until: activation_status.activations[0] is not defined

    - name: Create Rulebook Activation
      ansible.eda.rulebook_activation:
        controller_host: "{{ lookup('ansible.builtin.env', 'EDA_HOST') }}"
        controller_username: "{{ lookup('ansible.builtin.env', 'EDA_USERNAME') }}"
        controller_password: "{{ lookup('ansible.builtin.env', 'EDA_PASSWORD') }}"
        validate_certs: false
        name: "Kafka Rulebook Activation"
        description: "Kafka Rulebook Activation"
        project_name: "OpenTelemetry EDA Project"
        rulebook_name: kafka_ssl.yaml
        decision_environment_name: EDA Decision Environment
        enabled: true
        awx_token_name: "Ansible Controller"
        state: present

    - name: Wait for rulebook activation to be running
      ansible.eda.rulebook_activation_info:
        controller_host: "{{ lookup('ansible.builtin.env', 'EDA_HOST') }}"
        controller_username: "{{ lookup('ansible.builtin.env', 'EDA_USERNAME') }}"
        controller_password: "{{ lookup('ansible.builtin.env', 'EDA_PASSWORD') }}"
        name: "Kafka Rulebook Activation"
        validate_certs: false
      register: activation_status
      until: activation_status.activations[0] is defined and activation_status.activations[0].status == "running"

    - name: Retrieve all incidents
      servicenow.itsm.api_info:
        instance:
          host: "{{ lookup('ansible.builtin.env', 'SN_HOST') }}"
          username: "{{ lookup('ansible.builtin.env', 'SN_USERNAME') }}"
          password: "{{ lookup('ansible.builtin.env', 'SN_PASSWORD') }}"
        resource: incident
      register: incidents

    - servicenow.itsm.incident:
        instance:
          host: "{{ lookup('ansible.builtin.env', 'SN_HOST') }}"
          username: "{{ lookup('ansible.builtin.env', 'SN_USERNAME') }}"
          password: "{{ lookup('ansible.builtin.env', 'SN_PASSWORD') }}"
        state: absent
        number: "{{ item.number }}"
      loop: "{{ incidents.record }}"

    - name: Delete project update jobs
      ansible.builtin.uri:
        url: "{{ lookup('ansible.builtin.env', 'CONTROLLER_HOST') }}/api/v2/system_job_templates/1/launch/"
        user: "{{ lookup('ansible.builtin.env', 'CONTROLLER_USERNAME') }}"
        password: "{{ lookup('ansible.builtin.env', 'CONTROLLER_PASSWORD') }}"
        method: POST
        validate_certs: false
        force_basic_auth: true
        status_code:
          - 200
          - 201
        body_format: json
        body: '{"extra_vars": {"days": "0"}}'


